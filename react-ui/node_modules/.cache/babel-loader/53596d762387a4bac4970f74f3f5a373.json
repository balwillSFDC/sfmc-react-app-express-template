{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n      XMLCharacterData,\n      XMLProcessingInstruction,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLProcessingInstruction = function (superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\n      }\n\n      this.type = NodeType.ProcessingInstruction;\n      this.target = this.stringify.insTarget(target);\n      this.name = this.target;\n\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function () {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function (options) {\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLProcessingInstruction.prototype.isEqualNode = function (node) {\n      if (!XMLProcessingInstruction.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n\n      if (node.target !== this.target) {\n        return false;\n      }\n\n      return true;\n    };\n\n    return XMLProcessingInstruction;\n  }(XMLCharacterData);\n}).call(this);","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/node_modules/xmlbuilder/lib/XMLProcessingInstruction.js"],"names":["NodeType","XMLCharacterData","XMLProcessingInstruction","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","target","value","Error","debugInfo","type","ProcessingInstruction","stringify","insTarget","name","insValue","clone","Object","create","toString","options","writer","processingInstruction","filterOptions","isEqualNode","node","apply","arguments"],"mappings":"AAAA;AACA,CAAC,YAAW;AACV,MAAIA,QAAJ;AAAA,MAAcC,gBAAd;AAAA,MAAgCC,wBAAhC;AAAA,MACEC,MAAM,GAAG,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;AAAE,SAAK,IAAIC,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIE,OAAO,CAACC,IAAR,CAAaH,MAAb,EAAqBC,GAArB,CAAJ,EAA+BF,KAAK,CAACE,GAAD,CAAL,GAAaD,MAAM,CAACC,GAAD,CAAnB;AAA2B;;AAAC,aAASG,IAAT,GAAgB;AAAE,WAAKC,WAAL,GAAmBN,KAAnB;AAA2B;;AAACK,IAAAA,IAAI,CAACE,SAAL,GAAiBN,MAAM,CAACM,SAAxB;AAAmCP,IAAAA,KAAK,CAACO,SAAN,GAAkB,IAAIF,IAAJ,EAAlB;AAA8BL,IAAAA,KAAK,CAACQ,SAAN,GAAkBP,MAAM,CAACM,SAAzB;AAAoC,WAAOP,KAAP;AAAe,GAD5R;AAAA,MAEEG,OAAO,GAAG,GAAGM,cAFf;;AAIAb,EAAAA,QAAQ,GAAGc,OAAO,CAAC,YAAD,CAAlB;AAEAb,EAAAA,gBAAgB,GAAGa,OAAO,CAAC,oBAAD,CAA1B;;AAEAC,EAAAA,MAAM,CAACC,OAAP,GAAiBd,wBAAwB,GAAI,UAASe,UAAT,EAAqB;AAChEd,IAAAA,MAAM,CAACD,wBAAD,EAA2Be,UAA3B,CAAN;;AAEA,aAASf,wBAAT,CAAkCG,MAAlC,EAA0Ca,MAA1C,EAAkDC,KAAlD,EAAyD;AACvDjB,MAAAA,wBAAwB,CAACU,SAAzB,CAAmCF,WAAnC,CAA+CF,IAA/C,CAAoD,IAApD,EAA0DH,MAA1D;;AACA,UAAIa,MAAM,IAAI,IAAd,EAAoB;AAClB,cAAM,IAAIE,KAAJ,CAAU,iCAAiC,KAAKC,SAAL,EAA3C,CAAN;AACD;;AACD,WAAKC,IAAL,GAAYtB,QAAQ,CAACuB,qBAArB;AACA,WAAKL,MAAL,GAAc,KAAKM,SAAL,CAAeC,SAAf,CAAyBP,MAAzB,CAAd;AACA,WAAKQ,IAAL,GAAY,KAAKR,MAAjB;;AACA,UAAIC,KAAJ,EAAW;AACT,aAAKA,KAAL,GAAa,KAAKK,SAAL,CAAeG,QAAf,CAAwBR,KAAxB,CAAb;AACD;AACF;;AAEDjB,IAAAA,wBAAwB,CAACS,SAAzB,CAAmCiB,KAAnC,GAA2C,YAAW;AACpD,aAAOC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAP;AACD,KAFD;;AAIA5B,IAAAA,wBAAwB,CAACS,SAAzB,CAAmCoB,QAAnC,GAA8C,UAASC,OAAT,EAAkB;AAC9D,aAAO,KAAKA,OAAL,CAAaC,MAAb,CAAoBC,qBAApB,CAA0C,IAA1C,EAAgD,KAAKF,OAAL,CAAaC,MAAb,CAAoBE,aAApB,CAAkCH,OAAlC,CAAhD,CAAP;AACD,KAFD;;AAIA9B,IAAAA,wBAAwB,CAACS,SAAzB,CAAmCyB,WAAnC,GAAiD,UAASC,IAAT,EAAe;AAC9D,UAAI,CAACnC,wBAAwB,CAACU,SAAzB,CAAmCwB,WAAnC,CAA+CE,KAA/C,CAAqD,IAArD,EAA2DC,SAA3D,EAAsEH,WAAtE,CAAkFC,IAAlF,CAAL,EAA8F;AAC5F,eAAO,KAAP;AACD;;AACD,UAAIA,IAAI,CAACnB,MAAL,KAAgB,KAAKA,MAAzB,EAAiC;AAC/B,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KARD;;AAUA,WAAOhB,wBAAP;AAED,GApC2C,CAoCzCD,gBApCyC,CAA5C;AAsCD,CA/CD,EA+CGO,IA/CH,CA+CQ,IA/CR","sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\n      }\n      this.type = NodeType.ProcessingInstruction;\n      this.target = this.stringify.insTarget(target);\n      this.name = this.target;\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLProcessingInstruction.prototype.isEqualNode = function(node) {\n      if (!XMLProcessingInstruction.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.target !== this.target) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLCharacterData);\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}