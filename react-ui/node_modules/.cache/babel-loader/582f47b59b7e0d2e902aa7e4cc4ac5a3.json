{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n      XMLCData,\n      XMLCharacterData,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLCData = function (superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function () {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function (options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLCData;\n  }(XMLCharacterData);\n}).call(this);","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/react-ui/node_modules/xmlbuilder/lib/XMLCData.js"],"names":["NodeType","XMLCData","XMLCharacterData","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","text","Error","debugInfo","name","type","CData","value","stringify","cdata","clone","Object","create","toString","options","writer","filterOptions"],"mappings":"AAAA;AACA,CAAC,YAAW;AACV,MAAIA,QAAJ;AAAA,MAAcC,QAAd;AAAA,MAAwBC,gBAAxB;AAAA,MACEC,MAAM,GAAG,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;AAAE,SAAK,IAAIC,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIE,OAAO,CAACC,IAAR,CAAaH,MAAb,EAAqBC,GAArB,CAAJ,EAA+BF,KAAK,CAACE,GAAD,CAAL,GAAaD,MAAM,CAACC,GAAD,CAAnB;AAA2B;;AAAC,aAASG,IAAT,GAAgB;AAAE,WAAKC,WAAL,GAAmBN,KAAnB;AAA2B;;AAACK,IAAAA,IAAI,CAACE,SAAL,GAAiBN,MAAM,CAACM,SAAxB;AAAmCP,IAAAA,KAAK,CAACO,SAAN,GAAkB,IAAIF,IAAJ,EAAlB;AAA8BL,IAAAA,KAAK,CAACQ,SAAN,GAAkBP,MAAM,CAACM,SAAzB;AAAoC,WAAOP,KAAP;AAAe,GAD5R;AAAA,MAEEG,OAAO,GAAG,GAAGM,cAFf;;AAIAb,EAAAA,QAAQ,GAAGc,OAAO,CAAC,YAAD,CAAlB;AAEAZ,EAAAA,gBAAgB,GAAGY,OAAO,CAAC,oBAAD,CAA1B;;AAEAC,EAAAA,MAAM,CAACC,OAAP,GAAiBf,QAAQ,GAAI,UAASgB,UAAT,EAAqB;AAChDd,IAAAA,MAAM,CAACF,QAAD,EAAWgB,UAAX,CAAN;;AAEA,aAAShB,QAAT,CAAkBI,MAAlB,EAA0Ba,IAA1B,EAAgC;AAC9BjB,MAAAA,QAAQ,CAACW,SAAT,CAAmBF,WAAnB,CAA+BF,IAA/B,CAAoC,IAApC,EAA0CH,MAA1C;;AACA,UAAIa,IAAI,IAAI,IAAZ,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,yBAAyB,KAAKC,SAAL,EAAnC,CAAN;AACD;;AACD,WAAKC,IAAL,GAAY,gBAAZ;AACA,WAAKC,IAAL,GAAYtB,QAAQ,CAACuB,KAArB;AACA,WAAKC,KAAL,GAAa,KAAKC,SAAL,CAAeC,KAAf,CAAqBR,IAArB,CAAb;AACD;;AAEDjB,IAAAA,QAAQ,CAACU,SAAT,CAAmBgB,KAAnB,GAA2B,YAAW;AACpC,aAAOC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAP;AACD,KAFD;;AAIA5B,IAAAA,QAAQ,CAACU,SAAT,CAAmBmB,QAAnB,GAA8B,UAASC,OAAT,EAAkB;AAC9C,aAAO,KAAKA,OAAL,CAAaC,MAAb,CAAoBN,KAApB,CAA0B,IAA1B,EAAgC,KAAKK,OAAL,CAAaC,MAAb,CAAoBC,aAApB,CAAkCF,OAAlC,CAAhC,CAAP;AACD,KAFD;;AAIA,WAAO9B,QAAP;AAED,GAvB2B,CAuBzBC,gBAvByB,CAA5B;AAyBD,CAlCD,EAkCGM,IAlCH,CAkCQ,IAlCR","sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCData, XMLCharacterData,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLCData;\n\n  })(XMLCharacterData);\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}