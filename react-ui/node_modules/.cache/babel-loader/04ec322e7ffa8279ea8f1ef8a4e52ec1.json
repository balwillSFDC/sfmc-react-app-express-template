{"ast":null,"code":"import axios from 'axios'; // returns the url that will redirect the user to the login screen with auth code attached\n\nexport const fetchAuthCode = () => {\n  return async (dispatch, getState) => {\n    // Tell the app we're fetching auth code\n    dispatch({\n      type: 'FETCH_AUTHORIZATION_CODE_REQUEST'\n    }); // Try and fetch the Authorization Code\n\n    try {\n      let response = await axios.get('/api/authcode'); // Tell the App we've successfully retrieve auth code\n\n      dispatch({\n        type: 'FETCH_AUTHORIZATION_CODE_SUCCESS',\n        payload: {\n          authCodeLogin: response.data\n        }\n      });\n    } // Tell the App auth code retrieval failed \n    catch (error) {\n      dispatch({\n        type: 'FETCH_AUTHORIZATION_CODE_ERROR'\n      });\n    }\n  };\n};\nexport const fetchAccessToken = () => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: 'FETCH_ACCESS_TOKEN_REQUEST'\n    });\n\n    try {\n      var urlParams = new URLSearchParams(window.location.search);\n      let response = await axios.post('api/accesstoken', {\n        code: urlParams.get('code')\n      });\n      dispatch({\n        type: 'FETCH_ACCESS_TOKEN_SUCCESS',\n        payload: {\n          accessToken: response.data.access_token,\n          refreshToken: response.data.refresh_token,\n          tokenExpirationSeconds: response.data.expires_in,\n          authCode: urlParams.get('code')\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'FETCH_ACCESS_TOKEN_FAILURE',\n        payload: error\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/react-ui/src/actions.js"],"names":["axios","fetchAuthCode","dispatch","getState","type","response","get","payload","authCodeLogin","data","error","fetchAccessToken","urlParams","URLSearchParams","window","location","search","post","code","accessToken","access_token","refreshToken","refresh_token","tokenExpirationSeconds","expires_in","authCode"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC;AACAD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR,CAFmC,CAMnC;;AACA,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,eAAV,CAArB,CADE,CAEF;;AACAJ,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,kCADC;AAEPG,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAEH,QAAQ,CAACI;AADjB;AAFF,OAAD,CAAR;AAMD,KATD,CAUA;AACA,WAAOC,KAAP,EAAc;AACZR,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE;AADC,OAAD,CAAR;AAGD;AACF,GAvBD;AAwBD,CAzBM;AA2BP,OAAO,MAAMO,gBAAgB,GAAG,MAAM;AACpC,SAAO,OAAOT,QAAP,EAAiBC,QAAjB,KAA8B;AACnCD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;;AAIA,QAAI;AACF,UAAIQ,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAhB;AAEA,UAAIX,QAAQ,GAAG,MAAML,KAAK,CAACiB,IAAN,CAAW,iBAAX,EAA8B;AACjDC,QAAAA,IAAI,EAAEN,SAAS,CAACN,GAAV,CAAc,MAAd;AAD2C,OAA9B,CAArB;AAIAJ,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,4BADC;AAEPG,QAAAA,OAAO,EAAE;AACPY,UAAAA,WAAW,EAAEd,QAAQ,CAACI,IAAT,CAAcW,YADpB;AAEPC,UAAAA,YAAY,EAAEhB,QAAQ,CAACI,IAAT,CAAca,aAFrB;AAGPC,UAAAA,sBAAsB,EAAElB,QAAQ,CAACI,IAAT,CAAce,UAH/B;AAIPC,UAAAA,QAAQ,EAAEb,SAAS,CAACN,GAAV,CAAc,MAAd;AAJH;AAFF,OAAD,CAAR;AAUD,KAjBD,CAiBE,OAAOI,KAAP,EAAc;AACdR,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,4BADC;AAEPG,QAAAA,OAAO,EAAEG;AAFF,OAAD,CAAR;AAID;AAEF,GA7BD;AA8BD,CA/BM","sourcesContent":["import axios from 'axios'\r\n\r\n\r\n// returns the url that will redirect the user to the login screen with auth code attached\r\nexport const fetchAuthCode = () => {\r\n  return async (dispatch, getState) => {\r\n    // Tell the app we're fetching auth code\r\n    dispatch({\r\n      type: 'FETCH_AUTHORIZATION_CODE_REQUEST'\r\n    })\r\n\r\n    // Try and fetch the Authorization Code\r\n    try {  \r\n      let response = await axios.get('/api/authcode')\r\n      // Tell the App we've successfully retrieve auth code\r\n      dispatch({\r\n        type: 'FETCH_AUTHORIZATION_CODE_SUCCESS',\r\n        payload: {\r\n          authCodeLogin: response.data  \r\n        }\r\n      })\r\n    } \r\n    // Tell the App auth code retrieval failed \r\n    catch (error) {\r\n      dispatch({\r\n        type: 'FETCH_AUTHORIZATION_CODE_ERROR'\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchAccessToken = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: 'FETCH_ACCESS_TOKEN_REQUEST'\r\n    })\r\n\r\n    try {\r\n      var urlParams = new URLSearchParams(window.location.search)\r\n      \r\n      let response = await axios.post('api/accesstoken', {\r\n        code: urlParams.get('code')\r\n      })\r\n\r\n      dispatch({\r\n        type: 'FETCH_ACCESS_TOKEN_SUCCESS',\r\n        payload: {\r\n          accessToken: response.data.access_token,\r\n          refreshToken: response.data.refresh_token,\r\n          tokenExpirationSeconds: response.data.expires_in,\r\n          authCode: urlParams.get('code'),\r\n        }\r\n      })\r\n      \r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'FETCH_ACCESS_TOKEN_FAILURE',\r\n        payload: error\r\n      })\r\n    }\r\n\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}