{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport sfmcHelper from './sfmcHelper';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\nconst initialState = {\n  buttonClicked: false\n};\n\nconst customMiddleWare = store => next => action => {\n  if (action.type === 'BUTTON_CLICKED') {\n    sfmcHelper.getAuthCode();\n  }\n\n  return next(action);\n};\n\nconst middlewareEnhancer = composeWithDevTools(applyMiddleware(logger, customMiddleWare, thunkMiddleware));\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'PAGE_LOADED':\n      return { ...state\n      };\n\n    case 'BUTTON_CLICKED':\n      return { ...state,\n        buttonClicked: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, middlewareEnhancer);\nexport default store;","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","sfmcHelper","thunkMiddleware","logger","initialState","buttonClicked","customMiddleWare","store","next","action","type","getAuthCode","middlewareEnhancer","reducer","state"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE;AADI,CAArB;;AAIA,MAAMC,gBAAgB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AAClD,MAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACpCT,IAAAA,UAAU,CAACU,WAAX;AACD;;AAED,SAAOH,IAAI,CAACC,MAAD,CAAX;AACD,CAND;;AAQA,MAAMG,kBAAkB,GAAGZ,mBAAmB,CAACD,eAAe,CAACI,MAAD,EAASG,gBAAT,EAA2BJ,eAA3B,CAAhB,CAA9C;;AAEA,MAAMW,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGI;AADE,OAAP;;AAIF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGA,KADE;AAELT,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF;AACE,aAAOS,KAAP;AAZJ;AAeD,CAhBD;;AAkBA,MAAMP,KAAK,GAAGT,WAAW,CAACe,OAAD,EAAUD,kBAAV,CAAzB;AAEA,eAAeL,KAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport sfmcHelper from './sfmcHelper'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\nconst initialState = {\r\n  buttonClicked: false\r\n}\r\n\r\nconst customMiddleWare = store => next => action => {\r\n  if (action.type === 'BUTTON_CLICKED') {\r\n    sfmcHelper.getAuthCode()\r\n  }\r\n  \r\n  return next(action)\r\n}\r\n\r\nconst middlewareEnhancer = composeWithDevTools(applyMiddleware(logger, customMiddleWare, thunkMiddleware))\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'PAGE_LOADED':\r\n      return {\r\n        ...state,\r\n\r\n      }\r\n    case 'BUTTON_CLICKED':\r\n      return {\r\n        ...state,\r\n        buttonClicked: true\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n  \r\n}\r\n\r\nconst store = createStore(reducer, middlewareEnhancer)\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}