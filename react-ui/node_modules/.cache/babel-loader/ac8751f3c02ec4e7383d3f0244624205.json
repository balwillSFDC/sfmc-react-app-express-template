{"ast":null,"code":"import sfmcHelper from './sfmcHelper';\nconst initialState = {\n  buttonClicked: false,\n  pageLoaded: false,\n  authCode: '',\n  accessToken: '',\n  refreshToken: '',\n  tokenExpirationSeconds: 0\n};\n\nconst customMiddleWare = store => next => action => {\n  switch (action.type) {\n    case 'PAGE_LOAD_INITIATED':\n      fetch('/api').then(response => JSON.stringify()).then(json => console.log(json));\n    // case 'PAGE_LOAD_SUCCESSFUL':\n    //   return sfmcHelper.getAccessToken(action.payload.authCode)\n  }\n\n  return next(action);\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'PAGE_LOAD_SUCCESSFUL':\n      return { ...state,\n        pageLoaded: true\n      };\n\n    case 'BUTTON_CLICKED':\n      return { ...state,\n        buttonClicked: true\n      };\n\n    case 'ACCESS_TOKEN_RECEIVED':\n      return { ...state,\n        accessToken: action.payload.accessToken,\n        refreshToken: action.payload.refreshToken,\n        tokenExpirationSeconds: action.payload.tokenExpirationSeconds\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { customMiddleWare, reducer };","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/react-ui/src/reducer.js"],"names":["sfmcHelper","initialState","buttonClicked","pageLoaded","authCode","accessToken","refreshToken","tokenExpirationSeconds","customMiddleWare","store","next","action","type","fetch","then","response","JSON","stringify","json","console","log","reducer","state","payload"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,QAAQ,EAAE,EAHS;AAInBC,EAAAA,WAAW,EAAE,EAJM;AAKnBC,EAAAA,YAAY,EAAE,EALK;AAMnBC,EAAAA,sBAAsB,EAAE;AANL,CAArB;;AASA,MAAMC,gBAAgB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AAElD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,qBAAL;AACEC,MAAAA,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CAAmBC,QAAQ,IAAIC,IAAI,CAACC,SAAL,EAA/B,EAAiDH,IAAjD,CAAsDI,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA9D;AACF;AACA;AAJF;;AAOA,SAAOR,IAAI,CAACC,MAAD,CAAX;AACD,CAVD;;AAYA,MAAMU,OAAO,GAAG,CAACC,KAAK,GAAGrB,YAAT,EAAuBU,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELnB,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELpB,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF,SAAK,uBAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELjB,QAAAA,WAAW,EAAEM,MAAM,CAACY,OAAP,CAAelB,WAFvB;AAGLC,QAAAA,YAAY,EAAEK,MAAM,CAACY,OAAP,CAAejB,YAHxB;AAILC,QAAAA,sBAAsB,EAAEI,MAAM,CAACY,OAAP,CAAehB;AAJlC,OAAP;;AAMF;AACE,aAAOe,KAAP;AAnBJ;AAsBD,CAvBD;;AAyBA,SAAQd,gBAAR,EAA0Ba,OAA1B","sourcesContent":["import sfmcHelper from './sfmcHelper'\r\n\r\nconst initialState = {\r\n  buttonClicked: false,\r\n  pageLoaded: false,\r\n  authCode: '',\r\n  accessToken: '',\r\n  refreshToken: '',\r\n  tokenExpirationSeconds: 0,\r\n}\r\n\r\nconst customMiddleWare = store => next => action => {\r\n  \r\n  switch(action.type) {\r\n    case 'PAGE_LOAD_INITIATED':\r\n      fetch('/api').then(response => JSON.stringify()).then(json => console.log(json))\r\n    // case 'PAGE_LOAD_SUCCESSFUL':\r\n    //   return sfmcHelper.getAccessToken(action.payload.authCode)\r\n  }\r\n  \r\n  return next(action)\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'PAGE_LOAD_SUCCESSFUL':\r\n      return {\r\n        ...state,\r\n        pageLoaded: true\r\n      };\r\n    case 'BUTTON_CLICKED':\r\n      return {\r\n        ...state,\r\n        buttonClicked: true\r\n      };\r\n    case 'ACCESS_TOKEN_RECEIVED':\r\n      return {\r\n        ...state,\r\n        accessToken: action.payload.accessToken,\r\n        refreshToken: action.payload.refreshToken,\r\n        tokenExpirationSeconds: action.payload.tokenExpirationSeconds\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n\r\nexport {customMiddleWare, reducer}"]},"metadata":{},"sourceType":"module"}