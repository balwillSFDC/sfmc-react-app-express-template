{"ast":null,"code":"// import sfmcClient from './sfmcClient'\nimport { store } from './store';\nconst clientId = process.env.REACT_APP_SFMC_CLIENTID;\nconst clientSecret = process.env.REACT_APP_SFMC_CLIENTSECRET;\nconst stack = process.env.REACT_APP_SFMC_STACK;\nconst origin = process.env.REACT_APP_SFMC_ORIGIN;\nconst authOrigin = process.env.REACT_APP_SFMC_AUTHORIGIN;\nconst soapOrigin = process.env.REACT_APP_SFMC_SOAPORIGIN;\nconst redirectUri = process.env.REACT_APP_REDIRECTURI;\nconst encodedRedirectUri = encodeURIComponent(redirectUri);\nlet functions = {\n  // getAllDataExtensions: () => {\n  //   var options = {\n  //       props: [\n  //       'ObjectID',\n  //       'PartnerKey',\n  //       'CustomerKey',\n  //       'Name',\n  //       'CreatedDate',\n  //       'ModifiedDate',\n  //       'Client.ID',\n  //       'Description',\n  //       'IsSendable',\n  //       'IsTestable',\n  //       'SendableDataExtensionField.Name',\n  //       'SendableSubscriberField.Name',\n  //       'Template.CustomerKey',\n  //       'CategoryID',\n  //       'Status',\n  //       'IsPlatformObject',\n  //       'DataRetentionPeriodLength',\n  //       'DataRetentionPeriodUnitOfMeasure',\n  //       'RowBasedRetention',\n  //       'ResetRetentionPeriodOnImport',\n  //       'DeleteAtEndOfRetentionPeriod',\n  //       'RetainUntil',\n  //       'DataRetentionPeriod'\n  //       ],\n  //       filter: {\n  //         leftOperand: 'Client.ID',\n  //         operator: 'isNotNull',\n  //         rightOperand: ''\n  //       }\n  //   };\n  //   const de = sfmcClient.dataExtension(options);\n  //   let dataExtensionsResult = new Promise((resolve, reject) => {\n  //       de.get((err, res) => {\n  //       if (err) console.log(err);\n  //       if (res) resolve(res.body.Results);\n  //       });\n  //   });\n  //   return dataExtensionsResult;\n  // },\n  getAuthCode: () => {\n    fetch(`${authOrigin}/v2/authorize?response_type=code&client_id=${clientId}&redirect_uri=${encodedRedirectUri}`).then(response => window.location.assign(response.url));\n  },\n  getAccessToken: authCode => {\n    let body = {\n      grant_type: 'authorization_code',\n      code: authCode,\n      client_id: clientId,\n      client_secret: clientSecret,\n      redirect_uri: redirectUri\n    };\n    fetch(`${authOrigin}/v2/token`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(response => response.json()).then(data => {\n      store.dispatch({\n        type: 'ACCESS_TOKEN_RECEIVED',\n        payload: {\n          accessToken: data.access_token,\n          refreshToken: data.refresh_token,\n          tokenExpirationSeconds: data.expires_in\n        }\n      });\n    });\n  }\n};\nexport default functions;","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/react-ui/src/sfmcHelper.js"],"names":["store","clientId","process","env","REACT_APP_SFMC_CLIENTID","clientSecret","REACT_APP_SFMC_CLIENTSECRET","stack","REACT_APP_SFMC_STACK","origin","REACT_APP_SFMC_ORIGIN","authOrigin","REACT_APP_SFMC_AUTHORIGIN","soapOrigin","REACT_APP_SFMC_SOAPORIGIN","redirectUri","REACT_APP_REDIRECTURI","encodedRedirectUri","encodeURIComponent","functions","getAuthCode","fetch","then","response","window","location","assign","url","getAccessToken","authCode","body","grant_type","code","client_id","client_secret","redirect_uri","method","headers","JSON","stringify","json","data","dispatch","type","payload","accessToken","access_token","refreshToken","refresh_token","tokenExpirationSeconds","expires_in"],"mappings":"AAAA;AACA,SAAQA,KAAR,QAAoB,SAApB;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAA7B;AACA,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,2BAAjC;AACA,MAAMC,KAAK,GAAGL,OAAO,CAACC,GAAR,CAAYK,oBAA1B;AACA,MAAMC,MAAM,GAAGP,OAAO,CAACC,GAAR,CAAYO,qBAA3B;AACA,MAAMC,UAAU,GAAGT,OAAO,CAACC,GAAR,CAAYS,yBAA/B;AACA,MAAMC,UAAU,GAAGX,OAAO,CAACC,GAAR,CAAYW,yBAA/B;AACA,MAAMC,WAAW,GAAGb,OAAO,CAACC,GAAR,CAAYa,qBAAhC;AACA,MAAMC,kBAAkB,GAAGC,kBAAkB,CAACH,WAAD,CAA7C;AAEA,IAAII,SAAS,GAAG;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEAC,EAAAA,WAAW,EAAE,MAAM;AACjBC,IAAAA,KAAK,CAAE,GAAEV,UAAW,8CAA6CV,QAAS,iBAAgBgB,kBAAmB,EAAxG,CAAL,CACGK,IADH,CACQC,QAAQ,IAAIC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBH,QAAQ,CAACI,GAAhC,CADpB;AAED,GAnDa;AAqDdC,EAAAA,cAAc,EAAGC,QAAD,IAAc;AAC5B,QAAIC,IAAI,GAAG;AACTC,MAAAA,UAAU,EAAE,oBADH;AAETC,MAAAA,IAAI,EAAEH,QAFG;AAGTI,MAAAA,SAAS,EAAEhC,QAHF;AAITiC,MAAAA,aAAa,EAAE7B,YAJN;AAKT8B,MAAAA,YAAY,EAAEpB;AALL,KAAX;AAQAM,IAAAA,KAAK,CAAE,GAAEV,UAAW,WAAf,EAA2B;AAC9ByB,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFqB;AAK9BP,MAAAA,IAAI,EAAEQ,IAAI,CAACC,SAAL,CAAeT,IAAf;AALwB,KAA3B,CAAL,CAOGR,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACiB,IAAT,EAPpB,EAQGlB,IARH,CAQQmB,IAAI,IAAI;AACZzC,MAAAA,KAAK,CAAC0C,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,uBADO;AAEbC,QAAAA,OAAO,EAAE;AACPC,UAAAA,WAAW,EAAEJ,IAAI,CAACK,YADX;AAEPC,UAAAA,YAAY,EAAEN,IAAI,CAACO,aAFZ;AAGPC,UAAAA,sBAAsB,EAAER,IAAI,CAACS;AAHtB;AAFI,OAAf;AAQD,KAjBH;AAmBD;AAjFa,CAAhB;AAsFA,eAAe/B,SAAf","sourcesContent":["// import sfmcClient from './sfmcClient'\r\nimport {store} from './store'\r\nconst clientId = process.env.REACT_APP_SFMC_CLIENTID;\r\nconst clientSecret = process.env.REACT_APP_SFMC_CLIENTSECRET;\r\nconst stack = process.env.REACT_APP_SFMC_STACK;\r\nconst origin = process.env.REACT_APP_SFMC_ORIGIN;\r\nconst authOrigin = process.env.REACT_APP_SFMC_AUTHORIGIN;\r\nconst soapOrigin = process.env.REACT_APP_SFMC_SOAPORIGIN;\r\nconst redirectUri = process.env.REACT_APP_REDIRECTURI\r\nconst encodedRedirectUri = encodeURIComponent(redirectUri)\r\n\r\nlet functions = {\r\n\r\n  // getAllDataExtensions: () => {\r\n  //   var options = {\r\n  //       props: [\r\n  //       'ObjectID',\r\n  //       'PartnerKey',\r\n  //       'CustomerKey',\r\n  //       'Name',\r\n  //       'CreatedDate',\r\n  //       'ModifiedDate',\r\n  //       'Client.ID',\r\n  //       'Description',\r\n  //       'IsSendable',\r\n  //       'IsTestable',\r\n  //       'SendableDataExtensionField.Name',\r\n  //       'SendableSubscriberField.Name',\r\n  //       'Template.CustomerKey',\r\n  //       'CategoryID',\r\n  //       'Status',\r\n  //       'IsPlatformObject',\r\n  //       'DataRetentionPeriodLength',\r\n  //       'DataRetentionPeriodUnitOfMeasure',\r\n  //       'RowBasedRetention',\r\n  //       'ResetRetentionPeriodOnImport',\r\n  //       'DeleteAtEndOfRetentionPeriod',\r\n  //       'RetainUntil',\r\n  //       'DataRetentionPeriod'\r\n  //       ],\r\n  //       filter: {\r\n  //         leftOperand: 'Client.ID',\r\n  //         operator: 'isNotNull',\r\n  //         rightOperand: ''\r\n  //       }\r\n  //   };\r\n  \r\n  //   const de = sfmcClient.dataExtension(options);\r\n  \r\n  //   let dataExtensionsResult = new Promise((resolve, reject) => {\r\n  //       de.get((err, res) => {\r\n  //       if (err) console.log(err);\r\n  //       if (res) resolve(res.body.Results);\r\n  //       });\r\n  //   });\r\n  \r\n  //   return dataExtensionsResult;\r\n  // },\r\n\r\n  getAuthCode: () => {\r\n    fetch(`${authOrigin}/v2/authorize?response_type=code&client_id=${clientId}&redirect_uri=${encodedRedirectUri}`)\r\n      .then(response => window.location.assign(response.url))\r\n  },\r\n\r\n  getAccessToken: (authCode) => {\r\n    let body = {\r\n      grant_type: 'authorization_code',\r\n      code: authCode,\r\n      client_id: clientId,\r\n      client_secret: clientSecret,\r\n      redirect_uri: redirectUri\r\n    }\r\n    \r\n    fetch(`${authOrigin}/v2/token`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(body)\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        store.dispatch({\r\n          type: 'ACCESS_TOKEN_RECEIVED',\r\n          payload: {\r\n            accessToken: data.access_token,\r\n            refreshToken: data.refresh_token,\r\n            tokenExpirationSeconds: data.expires_in\r\n          }\r\n        })\r\n      })\r\n      \r\n  }\r\n\r\n\r\n}\r\n\r\nexport default functions\r\n"]},"metadata":{},"sourceType":"module"}