{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport sfmcHelper from './sfmcHelper';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\nconst initialState = {\n  buttonClicked: false,\n  pageLoaded: false\n};\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst customMiddleWare = store => next => action => {\n  switch (action.type) {\n    case 'PAGE_LOADED':\n      sfmcHelper.getAuthCode();\n  }\n\n  return next(action);\n};\n\nconst middlewareEnhancer = composeWithDevTools(applyMiddleware(logger, customMiddleWare, thunkMiddleware));\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'PAGE_LOADED':\n      return { ...state,\n        pageLoaded: true\n      };\n\n    case 'BUTTON_CLICKED':\n      return { ...state,\n        buttonClicked: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(persistReducer(persistConfig, reducer), middlewareEnhancer);\nconst persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/src/store.js"],"names":["createStore","applyMiddleware","persistStore","persistReducer","storage","composeWithDevTools","sfmcHelper","thunkMiddleware","logger","initialState","buttonClicked","pageLoaded","persistConfig","key","customMiddleWare","store","next","action","type","getAuthCode","middlewareEnhancer","reducer","state","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;AAKA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBT,EAAAA;AAFoB,CAAtB;;AAKA,MAAMU,gBAAgB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AAClD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,aAAL;AACEZ,MAAAA,UAAU,CAACa,WAAX;AAFJ;;AAKA,SAAOH,IAAI,CAACC,MAAD,CAAX;AACD,CAPD;;AASA,MAAMG,kBAAkB,GAAGf,mBAAmB,CAACJ,eAAe,CAACO,MAAD,EAASM,gBAAT,EAA2BP,eAA3B,CAAhB,CAA9C;;AAEA,MAAMc,OAAO,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBQ,MAAvB,KAAkC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELX,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELZ,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF;AACE,aAAOY,KAAP;AAZJ;AAeD,CAhBD;;AAkBA,MAAMP,KAAK,GAAGf,WAAW,CAACG,cAAc,CAACS,aAAD,EAAgBS,OAAhB,CAAf,EAAyCD,kBAAzC,CAAzB;AACA,MAAMG,SAAS,GAAGrB,YAAY,CAACa,KAAD,CAA9B;AAEA,eAAe;AAACA,EAAAA,KAAD;AAAQQ,EAAAA;AAAR,CAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport sfmcHelper from './sfmcHelper'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\nconst initialState = {\r\n  buttonClicked: false,\r\n  pageLoaded: false\r\n}\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\n\r\nconst customMiddleWare = store => next => action => {\r\n  switch(action.type) {\r\n    case 'PAGE_LOADED':\r\n      sfmcHelper.getAuthCode()\r\n  }\r\n  \r\n  return next(action)\r\n}\r\n\r\nconst middlewareEnhancer = composeWithDevTools(applyMiddleware(logger, customMiddleWare, thunkMiddleware))\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'PAGE_LOADED':\r\n      return {\r\n        ...state,\r\n        pageLoaded: true\r\n      }\r\n    case 'BUTTON_CLICKED':\r\n      return {\r\n        ...state,\r\n        buttonClicked: true\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n  \r\n}\r\n\r\nconst store = createStore(persistReducer(persistConfig, reducer), middlewareEnhancer)\r\nconst persistor = persistStore(store)\r\n\r\nexport default {store, persistor};\r\n"]},"metadata":{},"sourceType":"module"}