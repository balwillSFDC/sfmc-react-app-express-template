{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport sfmcHelper from './sfmcHelper';\nconst initialState = {\n  buttonClicked: false\n};\n\nconst loggerMiddleware = store => next => action => {\n  console.log('dispatching', action);\n  let result = next(action);\n  console.log('updated state', store.getState());\n\n  if (action.type === 'BUTTON_CLICKED') {\n    sfmcHelper.getAllDataExtensions().then(console.log);\n  }\n\n  return result;\n};\n\nconst middlewareEnhancer = composeWithDevTools(loggerMiddleware);\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'BUTTON_CLICKED') {\n    return { ...state,\n      buttonClicked: action.payload.buttonClicked\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(reducer, middlewareEnhancer);\nexport default store;","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","sfmcHelper","initialState","buttonClicked","loggerMiddleware","store","next","action","console","log","result","getState","type","getAllDataExtensions","then","middlewareEnhancer","reducer","state","payload"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE;AADI,CAArB;;AAIA,MAAMC,gBAAgB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAA3B;AACA,MAAIG,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,KAAK,CAACM,QAAN,EAA7B;;AAGA,MAAIJ,MAAM,CAACK,IAAP,KAAgB,gBAApB,EAAsC;AACpCX,IAAAA,UAAU,CAACY,oBAAX,GAAkCC,IAAlC,CAAuCN,OAAO,CAACC,GAA/C;AACD;;AAGD,SAAOC,MAAP;AAED,CAbD;;AAgBA,MAAMK,kBAAkB,GAAGf,mBAAmB,CAACI,gBAAD,CAA9C;;AAEA,MAAMY,OAAO,GAAG,CAACC,KAAK,GAAGf,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,MAAIA,MAAM,CAACK,IAAP,KAAgB,gBAApB,EAAsC;AACpC,WAAO,EACL,GAAGK,KADE;AAELd,MAAAA,aAAa,EAAEI,MAAM,CAACW,OAAP,CAAef;AAFzB,KAAP;AAID;;AAED,SAAOc,KAAP;AACD,CATD;;AAWA,MAAMZ,KAAK,GAAGP,WAAW,CAACkB,OAAD,EAAUD,kBAAV,CAAzB;AAEA,eAAeV,KAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport sfmcHelper from './sfmcHelper'\r\n\r\n\r\nconst initialState = {\r\n  buttonClicked: false\r\n}\r\n\r\nconst loggerMiddleware = store => next => action => {\r\n  console.log('dispatching', action)\r\n  let result = next(action)\r\n  console.log('updated state', store.getState())\r\n\r\n\r\n  if (action.type === 'BUTTON_CLICKED') {\r\n    sfmcHelper.getAllDataExtensions().then(console.log)\r\n  }\r\n\r\n\r\n  return result\r\n\r\n}\r\n\r\n\r\nconst middlewareEnhancer = composeWithDevTools(loggerMiddleware)\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === 'BUTTON_CLICKED') {\r\n    return {\r\n      ...state,\r\n      buttonClicked: action.payload.buttonClicked\r\n    }\r\n  }\r\n\r\n  return state\r\n}\r\n\r\nconst store = createStore(reducer, middlewareEnhancer)\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}