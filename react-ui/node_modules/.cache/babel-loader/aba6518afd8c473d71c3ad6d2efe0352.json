{"ast":null,"code":"/*\r\n * Copyright (c) 2018, salesforce.com, inc.\r\n * All rights reserved.\r\n * Licensed under the BSD 3-Clause license.\r\n * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause\r\n */\n'use strict';\n\nconst url = require('url');\n\nmodule.exports = {\n  isValid401(res) {\n    const is401 = res.statusCode === 401;\n    let isFailureFromBadToken = false;\n\n    if (res.headers && res.headers['www-authenticate']) {\n      isFailureFromBadToken = /^Bearer\\s.+?invalid_token/.test(res.headers['www-authenticate']);\n    }\n\n    return is401 && isFailureFromBadToken;\n  },\n\n  resolveUri(origin, uri) {\n    if (origin && uri && !/^http/.test(uri)) {\n      uri = url.resolve(origin, uri);\n    }\n\n    return uri;\n  },\n\n  resolveUriForOAuth2(uri, restUrl) {\n    let urlParts = uri.toLowerCase().split(\".com/\");\n    return restUrl + urlParts[1];\n  }\n\n};","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/react-ui/node_modules/fuel-rest/lib/helpers.js"],"names":["url","require","module","exports","isValid401","res","is401","statusCode","isFailureFromBadToken","headers","test","resolveUri","origin","uri","resolve","resolveUriForOAuth2","restUrl","urlParts","toLowerCase","split"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AAChBC,EAAAA,UAAU,CAACC,GAAD,EAAM;AACf,UAAMC,KAAK,GAAGD,GAAG,CAACE,UAAJ,KAAmB,GAAjC;AACA,QAAIC,qBAAqB,GAAG,KAA5B;;AAEA,QAAIH,GAAG,CAACI,OAAJ,IAAeJ,GAAG,CAACI,OAAJ,CAAY,kBAAZ,CAAnB,EAAoD;AACnDD,MAAAA,qBAAqB,GAAG,4BAA4BE,IAA5B,CAAiCL,GAAG,CAACI,OAAJ,CAAY,kBAAZ,CAAjC,CAAxB;AACA;;AAED,WAAOH,KAAK,IAAIE,qBAAhB;AACA,GAVe;;AAWhBG,EAAAA,UAAU,CAACC,MAAD,EAASC,GAAT,EAAc;AACvB,QAAID,MAAM,IAAIC,GAAV,IAAiB,CAAC,QAAQH,IAAR,CAAaG,GAAb,CAAtB,EAAyC;AACxCA,MAAAA,GAAG,GAAGb,GAAG,CAACc,OAAJ,CAAYF,MAAZ,EAAoBC,GAApB,CAAN;AACA;;AACD,WAAOA,GAAP;AACA,GAhBe;;AAiBhBE,EAAAA,mBAAmB,CAACF,GAAD,EAAMG,OAAN,EAAe;AACjC,QAAIC,QAAQ,GAAGJ,GAAG,CAACK,WAAJ,GAAkBC,KAAlB,CAAwB,OAAxB,CAAf;AACA,WAAOH,OAAO,GAAGC,QAAQ,CAAC,CAAD,CAAzB;AACA;;AApBe,CAAjB","sourcesContent":["/*\r\n * Copyright (c) 2018, salesforce.com, inc.\r\n * All rights reserved.\r\n * Licensed under the BSD 3-Clause license.\r\n * For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n'use strict';\r\n\r\nconst url = require('url');\r\n\r\nmodule.exports = {\r\n\tisValid401(res) {\r\n\t\tconst is401 = res.statusCode === 401;\r\n\t\tlet isFailureFromBadToken = false;\r\n\r\n\t\tif (res.headers && res.headers['www-authenticate']) {\r\n\t\t\tisFailureFromBadToken = /^Bearer\\s.+?invalid_token/.test(res.headers['www-authenticate']);\r\n\t\t}\r\n\r\n\t\treturn is401 && isFailureFromBadToken;\r\n\t},\r\n\tresolveUri(origin, uri) {\r\n\t\tif (origin && uri && !/^http/.test(uri)) {\r\n\t\t\turi = url.resolve(origin, uri);\r\n\t\t}\r\n\t\treturn uri;\r\n\t},\r\n\tresolveUriForOAuth2(uri, restUrl) {\r\n\t\tlet urlParts = uri.toLowerCase().split(\".com/\");\r\n\t\treturn restUrl + urlParts[1];\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"script"}