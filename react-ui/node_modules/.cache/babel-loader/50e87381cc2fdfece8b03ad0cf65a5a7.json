{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n      XMLDTDEntity,\n      XMLNode,\n      isObject,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDEntity = function (superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n\n      if (name == null) {\n        throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n      }\n\n      if (value == null) {\n        throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n      }\n\n      this.pe = !!pe;\n      this.name = this.stringify.name(name);\n      this.type = NodeType.EntityDeclaration;\n\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n        this.internal = true;\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n        }\n\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n        }\n\n        this.internal = false;\n\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n        }\n      }\n    }\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function () {\n        return this.pubID;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function () {\n        return this.sysID;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function () {\n        return this.nData || null;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function () {\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function () {\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function () {\n        return null;\n      }\n    });\n\n    XMLDTDEntity.prototype.toString = function (options) {\n      return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDEntity;\n  }(XMLNode);\n}).call(this);","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/node_modules/xmlbuilder/lib/XMLDTDEntity.js"],"names":["NodeType","XMLDTDEntity","XMLNode","isObject","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","pe","name","value","Error","debugInfo","stringify","type","EntityDeclaration","dtdEntityValue","internal","pubID","sysID","dtdPubID","dtdSysID","nData","dtdNData","Object","defineProperty","get","toString","options","writer","dtdEntity","filterOptions"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n      }\n      if (value == null) {\n        throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.name(name);\n      this.type = NodeType.EntityDeclaration;\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n        this.internal = true;\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n        }\n        this.internal = false;\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n        }\n      }\n    }\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function() {\n        return this.nData || null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}