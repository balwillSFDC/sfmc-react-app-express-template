{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport sfmcHelper from './sfmcHelper';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\nconst initialState = {\n  buttonClicked: false,\n  pageLoaded: false\n};\n\nconst customMiddleWare = store => next => action => {\n  switch (action.type) {\n    case 'PAGE_LOADED':\n      sfmcHelper.getAuthCode();\n  }\n\n  return next(action);\n};\n\nconst middlewareEnhancer = composeWithDevTools(applyMiddleware(logger, customMiddleWare, thunkMiddleware));\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'PAGE_LOADED':\n      return { ...state,\n        pageLoaded: true\n      };\n\n    case 'BUTTON_CLICKED':\n      return { ...state,\n        buttonClicked: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nlet persistConfig = {\n  key: 'root',\n  storage: storage\n};\nconst persistedReducer = persistReducer(persistConfig, reducer);\nlet store = createStore(persistedReducer, middlewareEnhancer);\nlet persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/src/store.js"],"names":["createStore","applyMiddleware","persistStore","persistReducer","storage","composeWithDevTools","sfmcHelper","thunkMiddleware","logger","initialState","buttonClicked","pageLoaded","customMiddleWare","store","next","action","type","getAuthCode","middlewareEnhancer","reducer","state","persistConfig","key","persistedReducer","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;;AAKA,MAAMC,gBAAgB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AAClD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,aAAL;AACEV,MAAAA,UAAU,CAACW,WAAX;AAFJ;;AAKA,SAAOH,IAAI,CAACC,MAAD,CAAX;AACD,CAPD;;AASA,MAAMG,kBAAkB,GAAGb,mBAAmB,CAACJ,eAAe,CAACO,MAAD,EAASI,gBAAT,EAA2BL,eAA3B,CAAhB,CAA9C;;AAEA,MAAMY,OAAO,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELT,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELV,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF;AACE,aAAOU,KAAP;AAZJ;AAeD,CAhBD;;AAkBA,IAAIC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBlB,EAAAA,OAAO,EAAEA;AAFS,CAApB;AAKA,MAAMmB,gBAAgB,GAAGpB,cAAc,CAACkB,aAAD,EAAgBF,OAAhB,CAAvC;AAEA,IAAIN,KAAK,GAAGb,WAAW,CAACuB,gBAAD,EAAmBL,kBAAnB,CAAvB;AACA,IAAIM,SAAS,GAAGtB,YAAY,CAACW,KAAD,CAA5B;AAEA,SAAQA,KAAR,EAAeW,SAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport sfmcHelper from './sfmcHelper'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\nconst initialState = {\r\n  buttonClicked: false,\r\n  pageLoaded: false\r\n}\r\n\r\nconst customMiddleWare = store => next => action => {\r\n  switch(action.type) {\r\n    case 'PAGE_LOADED':\r\n      sfmcHelper.getAuthCode()\r\n  }\r\n  \r\n  return next(action)\r\n}\r\n\r\nconst middlewareEnhancer = composeWithDevTools(applyMiddleware(logger, customMiddleWare, thunkMiddleware))\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'PAGE_LOADED':\r\n      return {\r\n        ...state,\r\n        pageLoaded: true\r\n      }\r\n    case 'BUTTON_CLICKED':\r\n      return {\r\n        ...state,\r\n        buttonClicked: true\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n  \r\n}\r\n\r\nlet persistConfig = {\r\n  key: 'root',\r\n  storage: storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\nlet store = createStore(persistedReducer, middlewareEnhancer)\r\nlet persistor = persistStore(store)\r\n\r\nexport {store, persistor}\r\n"]},"metadata":{},"sourceType":"module"}