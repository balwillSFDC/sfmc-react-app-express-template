{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var NodeType,\n      XMLDTDAttList,\n      XMLDTDElement,\n      XMLDTDEntity,\n      XMLDTDNotation,\n      XMLDocType,\n      XMLNamedNodeMap,\n      XMLNode,\n      isObject,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n  XMLDTDAttList = require('./XMLDTDAttList');\n  XMLDTDEntity = require('./XMLDTDEntity');\n  XMLDTDElement = require('./XMLDTDElement');\n  XMLDTDNotation = require('./XMLDTDNotation');\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLDocType = function (superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var child, i, len, ref, ref1, ref2;\n\n      XMLDocType.__super__.constructor.call(this, parent);\n\n      this.type = NodeType.DocType;\n\n      if (parent.children) {\n        ref = parent.children;\n\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n\n          if (child.type === NodeType.Element) {\n            this.name = child.name;\n            break;\n          }\n        }\n      }\n\n      this.documentObject = parent;\n\n      if (isObject(pubID)) {\n        ref1 = pubID, pubID = ref1.pubID, sysID = ref1.sysID;\n      }\n\n      if (sysID == null) {\n        ref2 = [pubID, sysID], sysID = ref2[0], pubID = ref2[1];\n      }\n\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\n      get: function () {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n\n          if (child.type === NodeType.EntityDeclaration && !child.pe) {\n            nodes[child.name] = child;\n          }\n        }\n\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\n      get: function () {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n\n          if (child.type === NodeType.NotationDeclaration) {\n            nodes[child.name] = child;\n          }\n        }\n\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\n      get: function () {\n        return this.pubID;\n      }\n    });\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\n      get: function () {\n        return this.sysID;\n      }\n    });\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\n      get: function () {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLDocType.prototype.element = function (name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function (elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function (name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function (name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function (name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function (options) {\n      return this.options.writer.docType(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocType.prototype.ele = function (name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function (elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function (name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function (name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function (name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function () {\n      return this.root() || this.documentObject;\n    };\n\n    XMLDocType.prototype.isEqualNode = function (node) {\n      if (!XMLDocType.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n\n      if (node.name !== this.name) {\n        return false;\n      }\n\n      if (node.publicId !== this.publicId) {\n        return false;\n      }\n\n      if (node.systemId !== this.systemId) {\n        return false;\n      }\n\n      return true;\n    };\n\n    return XMLDocType;\n  }(XMLNode);\n}).call(this);","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/react-ui/node_modules/xmlbuilder/lib/XMLDocType.js"],"names":["NodeType","XMLDTDAttList","XMLDTDElement","XMLDTDEntity","XMLDTDNotation","XMLDocType","XMLNamedNodeMap","XMLNode","isObject","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","pubID","sysID","i","len","ref","ref1","ref2","type","DocType","children","length","Element","name","documentObject","stringify","dtdPubID","dtdSysID","Object","defineProperty","get","nodes","EntityDeclaration","pe","NotationDeclaration","Error","debugInfo","element","value","push","attList","elementName","attributeName","attributeType","defaultValueType","defaultValue","entity","pEntity","notation","toString","options","writer","docType","filterOptions","ele","att","ent","pent","not","up","root","isEqualNode","node","apply","arguments","publicId","systemId"],"mappings":"AAAA;AACA,CAAC,YAAW;AACV,MAAIA,QAAJ;AAAA,MAAcC,aAAd;AAAA,MAA6BC,aAA7B;AAAA,MAA4CC,YAA5C;AAAA,MAA0DC,cAA1D;AAAA,MAA0EC,UAA1E;AAAA,MAAsFC,eAAtF;AAAA,MAAuGC,OAAvG;AAAA,MAAgHC,QAAhH;AAAA,MACEC,MAAM,GAAG,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;AAAE,SAAK,IAAIC,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIE,OAAO,CAACC,IAAR,CAAaH,MAAb,EAAqBC,GAArB,CAAJ,EAA+BF,KAAK,CAACE,GAAD,CAAL,GAAaD,MAAM,CAACC,GAAD,CAAnB;AAA2B;;AAAC,aAASG,IAAT,GAAgB;AAAE,WAAKC,WAAL,GAAmBN,KAAnB;AAA2B;;AAACK,IAAAA,IAAI,CAACE,SAAL,GAAiBN,MAAM,CAACM,SAAxB;AAAmCP,IAAAA,KAAK,CAACO,SAAN,GAAkB,IAAIF,IAAJ,EAAlB;AAA8BL,IAAAA,KAAK,CAACQ,SAAN,GAAkBP,MAAM,CAACM,SAAzB;AAAoC,WAAOP,KAAP;AAAe,GAD5R;AAAA,MAEEG,OAAO,GAAG,GAAGM,cAFf;;AAIAX,EAAAA,QAAQ,GAAGY,OAAO,CAAC,WAAD,CAAP,CAAqBZ,QAAhC;AAEAD,EAAAA,OAAO,GAAGa,OAAO,CAAC,WAAD,CAAjB;AAEApB,EAAAA,QAAQ,GAAGoB,OAAO,CAAC,YAAD,CAAlB;AAEAnB,EAAAA,aAAa,GAAGmB,OAAO,CAAC,iBAAD,CAAvB;AAEAjB,EAAAA,YAAY,GAAGiB,OAAO,CAAC,gBAAD,CAAtB;AAEAlB,EAAAA,aAAa,GAAGkB,OAAO,CAAC,iBAAD,CAAvB;AAEAhB,EAAAA,cAAc,GAAGgB,OAAO,CAAC,kBAAD,CAAxB;AAEAd,EAAAA,eAAe,GAAGc,OAAO,CAAC,mBAAD,CAAzB;;AAEAC,EAAAA,MAAM,CAACC,OAAP,GAAiBjB,UAAU,GAAI,UAASkB,UAAT,EAAqB;AAClDd,IAAAA,MAAM,CAACJ,UAAD,EAAakB,UAAb,CAAN;;AAEA,aAASlB,UAAT,CAAoBM,MAApB,EAA4Ba,KAA5B,EAAmCC,KAAnC,EAA0C;AACxC,UAAIf,KAAJ,EAAWgB,CAAX,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,IAA9B;;AACAzB,MAAAA,UAAU,CAACa,SAAX,CAAqBF,WAArB,CAAiCF,IAAjC,CAAsC,IAAtC,EAA4CH,MAA5C;;AACA,WAAKoB,IAAL,GAAY/B,QAAQ,CAACgC,OAArB;;AACA,UAAIrB,MAAM,CAACsB,QAAX,EAAqB;AACnBL,QAAAA,GAAG,GAAGjB,MAAM,CAACsB,QAAb;;AACA,aAAKP,CAAC,GAAG,CAAJ,EAAOC,GAAG,GAAGC,GAAG,CAACM,MAAtB,EAA8BR,CAAC,GAAGC,GAAlC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1ChB,UAAAA,KAAK,GAAGkB,GAAG,CAACF,CAAD,CAAX;;AACA,cAAIhB,KAAK,CAACqB,IAAN,KAAe/B,QAAQ,CAACmC,OAA5B,EAAqC;AACnC,iBAAKC,IAAL,GAAY1B,KAAK,CAAC0B,IAAlB;AACA;AACD;AACF;AACF;;AACD,WAAKC,cAAL,GAAsB1B,MAAtB;;AACA,UAAIH,QAAQ,CAACgB,KAAD,CAAZ,EAAqB;AACnBK,QAAAA,IAAI,GAAGL,KAAP,EAAcA,KAAK,GAAGK,IAAI,CAACL,KAA3B,EAAkCC,KAAK,GAAGI,IAAI,CAACJ,KAA/C;AACD;;AACD,UAAIA,KAAK,IAAI,IAAb,EAAmB;AACjBK,QAAAA,IAAI,GAAG,CAACN,KAAD,EAAQC,KAAR,CAAP,EAAuBA,KAAK,GAAGK,IAAI,CAAC,CAAD,CAAnC,EAAwCN,KAAK,GAAGM,IAAI,CAAC,CAAD,CAApD;AACD;;AACD,UAAIN,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAKA,KAAL,GAAa,KAAKc,SAAL,CAAeC,QAAf,CAAwBf,KAAxB,CAAb;AACD;;AACD,UAAIC,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAKA,KAAL,GAAa,KAAKa,SAAL,CAAeE,QAAf,CAAwBf,KAAxB,CAAb;AACD;AACF;;AAEDgB,IAAAA,MAAM,CAACC,cAAP,CAAsBrC,UAAU,CAACY,SAAjC,EAA4C,UAA5C,EAAwD;AACtD0B,MAAAA,GAAG,EAAE,YAAW;AACd,YAAIjC,KAAJ,EAAWgB,CAAX,EAAcC,GAAd,EAAmBiB,KAAnB,EAA0BhB,GAA1B;AACAgB,QAAAA,KAAK,GAAG,EAAR;AACAhB,QAAAA,GAAG,GAAG,KAAKK,QAAX;;AACA,aAAKP,CAAC,GAAG,CAAJ,EAAOC,GAAG,GAAGC,GAAG,CAACM,MAAtB,EAA8BR,CAAC,GAAGC,GAAlC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1ChB,UAAAA,KAAK,GAAGkB,GAAG,CAACF,CAAD,CAAX;;AACA,cAAKhB,KAAK,CAACqB,IAAN,KAAe/B,QAAQ,CAAC6C,iBAAzB,IAA+C,CAACnC,KAAK,CAACoC,EAA1D,EAA8D;AAC5DF,YAAAA,KAAK,CAAClC,KAAK,CAAC0B,IAAP,CAAL,GAAoB1B,KAApB;AACD;AACF;;AACD,eAAO,IAAIJ,eAAJ,CAAoBsC,KAApB,CAAP;AACD;AAZqD,KAAxD;AAeAH,IAAAA,MAAM,CAACC,cAAP,CAAsBrC,UAAU,CAACY,SAAjC,EAA4C,WAA5C,EAAyD;AACvD0B,MAAAA,GAAG,EAAE,YAAW;AACd,YAAIjC,KAAJ,EAAWgB,CAAX,EAAcC,GAAd,EAAmBiB,KAAnB,EAA0BhB,GAA1B;AACAgB,QAAAA,KAAK,GAAG,EAAR;AACAhB,QAAAA,GAAG,GAAG,KAAKK,QAAX;;AACA,aAAKP,CAAC,GAAG,CAAJ,EAAOC,GAAG,GAAGC,GAAG,CAACM,MAAtB,EAA8BR,CAAC,GAAGC,GAAlC,EAAuCD,CAAC,EAAxC,EAA4C;AAC1ChB,UAAAA,KAAK,GAAGkB,GAAG,CAACF,CAAD,CAAX;;AACA,cAAIhB,KAAK,CAACqB,IAAN,KAAe/B,QAAQ,CAAC+C,mBAA5B,EAAiD;AAC/CH,YAAAA,KAAK,CAAClC,KAAK,CAAC0B,IAAP,CAAL,GAAoB1B,KAApB;AACD;AACF;;AACD,eAAO,IAAIJ,eAAJ,CAAoBsC,KAApB,CAAP;AACD;AAZsD,KAAzD;AAeAH,IAAAA,MAAM,CAACC,cAAP,CAAsBrC,UAAU,CAACY,SAAjC,EAA4C,UAA5C,EAAwD;AACtD0B,MAAAA,GAAG,EAAE,YAAW;AACd,eAAO,KAAKnB,KAAZ;AACD;AAHqD,KAAxD;AAMAiB,IAAAA,MAAM,CAACC,cAAP,CAAsBrC,UAAU,CAACY,SAAjC,EAA4C,UAA5C,EAAwD;AACtD0B,MAAAA,GAAG,EAAE,YAAW;AACd,eAAO,KAAKlB,KAAZ;AACD;AAHqD,KAAxD;AAMAgB,IAAAA,MAAM,CAACC,cAAP,CAAsBrC,UAAU,CAACY,SAAjC,EAA4C,gBAA5C,EAA8D;AAC5D0B,MAAAA,GAAG,EAAE,YAAW;AACd,cAAM,IAAIK,KAAJ,CAAU,wCAAwC,KAAKC,SAAL,EAAlD,CAAN;AACD;AAH2D,KAA9D;;AAMA5C,IAAAA,UAAU,CAACY,SAAX,CAAqBiC,OAArB,GAA+B,UAASd,IAAT,EAAee,KAAf,EAAsB;AACnD,UAAIzC,KAAJ;AACAA,MAAAA,KAAK,GAAG,IAAIR,aAAJ,CAAkB,IAAlB,EAAwBkC,IAAxB,EAA8Be,KAA9B,CAAR;AACA,WAAKlB,QAAL,CAAcmB,IAAd,CAAmB1C,KAAnB;AACA,aAAO,IAAP;AACD,KALD;;AAOAL,IAAAA,UAAU,CAACY,SAAX,CAAqBoC,OAArB,GAA+B,UAASC,WAAT,EAAsBC,aAAtB,EAAqCC,aAArC,EAAoDC,gBAApD,EAAsEC,YAAtE,EAAoF;AACjH,UAAIhD,KAAJ;AACAA,MAAAA,KAAK,GAAG,IAAIT,aAAJ,CAAkB,IAAlB,EAAwBqD,WAAxB,EAAqCC,aAArC,EAAoDC,aAApD,EAAmEC,gBAAnE,EAAqFC,YAArF,CAAR;AACA,WAAKzB,QAAL,CAAcmB,IAAd,CAAmB1C,KAAnB;AACA,aAAO,IAAP;AACD,KALD;;AAOAL,IAAAA,UAAU,CAACY,SAAX,CAAqB0C,MAArB,GAA8B,UAASvB,IAAT,EAAee,KAAf,EAAsB;AAClD,UAAIzC,KAAJ;AACAA,MAAAA,KAAK,GAAG,IAAIP,YAAJ,CAAiB,IAAjB,EAAuB,KAAvB,EAA8BiC,IAA9B,EAAoCe,KAApC,CAAR;AACA,WAAKlB,QAAL,CAAcmB,IAAd,CAAmB1C,KAAnB;AACA,aAAO,IAAP;AACD,KALD;;AAOAL,IAAAA,UAAU,CAACY,SAAX,CAAqB2C,OAArB,GAA+B,UAASxB,IAAT,EAAee,KAAf,EAAsB;AACnD,UAAIzC,KAAJ;AACAA,MAAAA,KAAK,GAAG,IAAIP,YAAJ,CAAiB,IAAjB,EAAuB,IAAvB,EAA6BiC,IAA7B,EAAmCe,KAAnC,CAAR;AACA,WAAKlB,QAAL,CAAcmB,IAAd,CAAmB1C,KAAnB;AACA,aAAO,IAAP;AACD,KALD;;AAOAL,IAAAA,UAAU,CAACY,SAAX,CAAqB4C,QAArB,GAAgC,UAASzB,IAAT,EAAee,KAAf,EAAsB;AACpD,UAAIzC,KAAJ;AACAA,MAAAA,KAAK,GAAG,IAAIN,cAAJ,CAAmB,IAAnB,EAAyBgC,IAAzB,EAA+Be,KAA/B,CAAR;AACA,WAAKlB,QAAL,CAAcmB,IAAd,CAAmB1C,KAAnB;AACA,aAAO,IAAP;AACD,KALD;;AAOAL,IAAAA,UAAU,CAACY,SAAX,CAAqB6C,QAArB,GAAgC,UAASC,OAAT,EAAkB;AAChD,aAAO,KAAKA,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4B,IAA5B,EAAkC,KAAKF,OAAL,CAAaC,MAAb,CAAoBE,aAApB,CAAkCH,OAAlC,CAAlC,CAAP;AACD,KAFD;;AAIA1D,IAAAA,UAAU,CAACY,SAAX,CAAqBkD,GAArB,GAA2B,UAAS/B,IAAT,EAAee,KAAf,EAAsB;AAC/C,aAAO,KAAKD,OAAL,CAAad,IAAb,EAAmBe,KAAnB,CAAP;AACD,KAFD;;AAIA9C,IAAAA,UAAU,CAACY,SAAX,CAAqBmD,GAArB,GAA2B,UAASd,WAAT,EAAsBC,aAAtB,EAAqCC,aAArC,EAAoDC,gBAApD,EAAsEC,YAAtE,EAAoF;AAC7G,aAAO,KAAKL,OAAL,CAAaC,WAAb,EAA0BC,aAA1B,EAAyCC,aAAzC,EAAwDC,gBAAxD,EAA0EC,YAA1E,CAAP;AACD,KAFD;;AAIArD,IAAAA,UAAU,CAACY,SAAX,CAAqBoD,GAArB,GAA2B,UAASjC,IAAT,EAAee,KAAf,EAAsB;AAC/C,aAAO,KAAKQ,MAAL,CAAYvB,IAAZ,EAAkBe,KAAlB,CAAP;AACD,KAFD;;AAIA9C,IAAAA,UAAU,CAACY,SAAX,CAAqBqD,IAArB,GAA4B,UAASlC,IAAT,EAAee,KAAf,EAAsB;AAChD,aAAO,KAAKS,OAAL,CAAaxB,IAAb,EAAmBe,KAAnB,CAAP;AACD,KAFD;;AAIA9C,IAAAA,UAAU,CAACY,SAAX,CAAqBsD,GAArB,GAA2B,UAASnC,IAAT,EAAee,KAAf,EAAsB;AAC/C,aAAO,KAAKU,QAAL,CAAczB,IAAd,EAAoBe,KAApB,CAAP;AACD,KAFD;;AAIA9C,IAAAA,UAAU,CAACY,SAAX,CAAqBuD,EAArB,GAA0B,YAAW;AACnC,aAAO,KAAKC,IAAL,MAAe,KAAKpC,cAA3B;AACD,KAFD;;AAIAhC,IAAAA,UAAU,CAACY,SAAX,CAAqByD,WAArB,GAAmC,UAASC,IAAT,EAAe;AAChD,UAAI,CAACtE,UAAU,CAACa,SAAX,CAAqBwD,WAArB,CAAiCE,KAAjC,CAAuC,IAAvC,EAA6CC,SAA7C,EAAwDH,WAAxD,CAAoEC,IAApE,CAAL,EAAgF;AAC9E,eAAO,KAAP;AACD;;AACD,UAAIA,IAAI,CAACvC,IAAL,KAAc,KAAKA,IAAvB,EAA6B;AAC3B,eAAO,KAAP;AACD;;AACD,UAAIuC,IAAI,CAACG,QAAL,KAAkB,KAAKA,QAA3B,EAAqC;AACnC,eAAO,KAAP;AACD;;AACD,UAAIH,IAAI,CAACI,QAAL,KAAkB,KAAKA,QAA3B,EAAqC;AACnC,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KAdD;;AAgBA,WAAO1E,UAAP;AAED,GAjK6B,CAiK3BE,OAjK2B,CAA9B;AAmKD,CAxLD,EAwLGO,IAxLH,CAwLQ,IAxLR","sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNamedNodeMap, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var child, i, len, ref, ref1, ref2;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.type = NodeType.DocType;\n      if (parent.children) {\n        ref = parent.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.Element) {\n            this.name = child.name;\n            break;\n          }\n        }\n      }\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref1 = pubID, pubID = ref1.pubID, sysID = ref1.sysID;\n      }\n      if (sysID == null) {\n        ref2 = [pubID, sysID], sysID = ref2[0], pubID = ref2[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if ((child.type === NodeType.EntityDeclaration) && !child.pe) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.NotationDeclaration) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.docType(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    XMLDocType.prototype.isEqualNode = function(node) {\n      if (!XMLDocType.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.name !== this.name) {\n        return false;\n      }\n      if (node.publicId !== this.publicId) {\n        return false;\n      }\n      if (node.systemId !== this.systemId) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}