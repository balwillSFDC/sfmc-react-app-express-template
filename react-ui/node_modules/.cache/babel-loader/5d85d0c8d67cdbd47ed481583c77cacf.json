{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var DocumentPosition,\n      NodeType,\n      XMLCData,\n      XMLComment,\n      XMLDeclaration,\n      XMLDocType,\n      XMLDummy,\n      XMLElement,\n      XMLNamedNodeMap,\n      XMLNode,\n      XMLNodeList,\n      XMLProcessingInstruction,\n      XMLRaw,\n      XMLText,\n      getValue,\n      isEmpty,\n      isFunction,\n      isObject,\n      ref1,\n      hasProp = {}.hasOwnProperty;\n  ref1 = require('./Utility'), isObject = ref1.isObject, isFunction = ref1.isFunction, isEmpty = ref1.isEmpty, getValue = ref1.getValue;\n  XMLElement = null;\n  XMLCData = null;\n  XMLComment = null;\n  XMLDeclaration = null;\n  XMLDocType = null;\n  XMLRaw = null;\n  XMLText = null;\n  XMLProcessingInstruction = null;\n  XMLDummy = null;\n  NodeType = null;\n  XMLNodeList = null;\n  XMLNamedNodeMap = null;\n  DocumentPosition = null;\n\n  module.exports = XMLNode = function () {\n    function XMLNode(parent1) {\n      this.parent = parent1;\n\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n\n      this.value = null;\n      this.children = [];\n      this.baseURI = null;\n\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n        XMLDummy = require('./XMLDummy');\n        NodeType = require('./NodeType');\n        XMLNodeList = require('./XMLNodeList');\n        XMLNamedNodeMap = require('./XMLNamedNodeMap');\n        DocumentPosition = require('./DocumentPosition');\n      }\n    }\n\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\n      get: function () {\n        return this.name;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\n      get: function () {\n        return this.type;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\n      get: function () {\n        return this.value;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\n      get: function () {\n        return this.parent;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\n      get: function () {\n        if (!this.childNodeList || !this.childNodeList.nodes) {\n          this.childNodeList = new XMLNodeList(this.children);\n        }\n\n        return this.childNodeList;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\n      get: function () {\n        return this.children[0] || null;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\n      get: function () {\n        return this.children[this.children.length - 1] || null;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\n      get: function () {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i - 1] || null;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\n      get: function () {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i + 1] || null;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\n      get: function () {\n        return this.document() || null;\n      }\n    });\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\n      get: function () {\n        var child, j, len, ref2, str;\n\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\n          str = '';\n          ref2 = this.children;\n\n          for (j = 0, len = ref2.length; j < len; j++) {\n            child = ref2[j];\n\n            if (child.textContent) {\n              str += child.textContent;\n            }\n          }\n\n          return str;\n        } else {\n          return null;\n        }\n      },\n      set: function (value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLNode.prototype.setParent = function (parent) {\n      var child, j, len, ref2, results;\n      this.parent = parent;\n\n      if (parent) {\n        this.options = parent.options;\n        this.stringify = parent.stringify;\n      }\n\n      ref2 = this.children;\n      results = [];\n\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        results.push(child.setParent(this));\n      }\n\n      return results;\n    };\n\n    XMLNode.prototype.element = function (name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref2, ref3, val;\n      lastChild = null;\n\n      if (attributes === null && text == null) {\n        ref2 = [{}, null], attributes = ref2[0], text = ref2[1];\n      }\n\n      if (attributes == null) {\n        attributes = {};\n      }\n\n      attributes = getValue(attributes);\n\n      if (!isObject(attributes)) {\n        ref3 = [attributes, text], text = ref3[0], attributes = ref3[1];\n      }\n\n      if (name != null) {\n        name = getValue(name);\n      }\n\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\n            lastChild = this.dummy();\n          } else if (isObject(val) && isEmpty(val)) {\n            lastChild = this.element(key);\n          } else if (!this.options.keepNullNodes && val == null) {\n            lastChild = this.dummy();\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\n              lastChild = this.element(val);\n            } else {\n              lastChild = this.element(key);\n              lastChild.element(val);\n            }\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else if (!this.options.keepNullNodes && text === null) {\n        lastChild = this.dummy();\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n      }\n\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function (name, attributes, text) {\n      var child, i, newChild, refChild, removed;\n\n      if (name != null ? name.type : void 0) {\n        newChild = name;\n        refChild = attributes;\n        newChild.setParent(this);\n\n        if (refChild) {\n          i = children.indexOf(refChild);\n          removed = children.splice(i);\n          children.push(newChild);\n          Array.prototype.push.apply(children, removed);\n        } else {\n          children.push(newChild);\n        }\n\n        return newChild;\n      } else {\n        if (this.isRoot) {\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n        }\n\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        child = this.parent.element(name, attributes, text);\n        Array.prototype.push.apply(this.parent.children, removed);\n        return child;\n      }\n    };\n\n    XMLNode.prototype.insertAfter = function (name, attributes, text) {\n      var child, i, removed;\n\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n      }\n\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function () {\n      var i, ref2;\n\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n      }\n\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref2 = [])), ref2;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function (name, attributes, text) {\n      var child, ref2;\n\n      if (name != null) {\n        name = getValue(name);\n      }\n\n      attributes || (attributes = {});\n      attributes = getValue(attributes);\n\n      if (!isObject(attributes)) {\n        ref2 = [attributes, text], text = ref2[0], attributes = ref2[1];\n      }\n\n      child = new XMLElement(this, name, attributes);\n\n      if (text != null) {\n        child.text(text);\n      }\n\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function (value) {\n      var child;\n\n      if (isObject(value)) {\n        this.element(value);\n      }\n\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function (value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function (value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function (value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function (value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function (value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.dummy = function () {\n      var child;\n      child = new XMLDummy(this);\n      return child;\n    };\n\n    XMLNode.prototype.instruction = function (target, value) {\n      var insTarget, insValue, instruction, j, len;\n\n      if (target != null) {\n        target = getValue(target);\n      }\n\n      if (value != null) {\n        value = getValue(value);\n      }\n\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function (target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function (target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function (version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n\n      if (doc.children.length === 0) {\n        doc.children.unshift(xmldec);\n      } else if (doc.children[0].type === NodeType.Declaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.dtd = function (pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref2, ref3;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref2 = doc.children;\n\n      for (i = j = 0, len = ref2.length; j < len; i = ++j) {\n        child = ref2[i];\n\n        if (child.type === NodeType.DocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n\n      ref3 = doc.children;\n\n      for (i = k = 0, len1 = ref3.length; k < len1; i = ++k) {\n        child = ref3[i];\n\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function () {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function () {\n      var node;\n      node = this;\n\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function () {\n      var node;\n      node = this;\n\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function (options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function () {\n      var i;\n      i = this.parent.children.indexOf(this);\n\n      if (i < 1) {\n        throw new Error(\"Already at the first node. \" + this.debugInfo());\n      }\n\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function () {\n      var i;\n      i = this.parent.children.indexOf(this);\n\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node. \" + this.debugInfo());\n      }\n\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function (doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.debugInfo = function (name) {\n      var ref2, ref3;\n      name = name || this.name;\n\n      if (name == null && !((ref2 = this.parent) != null ? ref2.name : void 0)) {\n        return \"\";\n      } else if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else if (!((ref3 = this.parent) != null ? ref3.name : void 0)) {\n        return \"node: <\" + name + \">\";\n      } else {\n        return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLNode.prototype.ele = function (name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function (name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function (value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function (value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function (value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function (target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function () {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function (version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.e = function (name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function (name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function (value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function (value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function (value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function (value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function (target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function () {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function (doc) {\n      return this.importDocument(doc);\n    };\n\n    XMLNode.prototype.replaceChild = function (newChild, oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.removeChild = function (oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.appendChild = function (newChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.hasChildNodes = function () {\n      return this.children.length !== 0;\n    };\n\n    XMLNode.prototype.cloneNode = function (deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.normalize = function () {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isSupported = function (feature, version) {\n      return true;\n    };\n\n    XMLNode.prototype.hasAttributes = function () {\n      return this.attribs.length !== 0;\n    };\n\n    XMLNode.prototype.compareDocumentPosition = function (other) {\n      var ref, res;\n      ref = this;\n\n      if (ref === other) {\n        return 0;\n      } else if (this.document() !== other.document()) {\n        res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\n\n        if (Math.random() < 0.5) {\n          res |= DocumentPosition.Preceding;\n        } else {\n          res |= DocumentPosition.Following;\n        }\n\n        return res;\n      } else if (ref.isAncestor(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Preceding;\n      } else if (ref.isDescendant(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Following;\n      } else if (ref.isPreceding(other)) {\n        return DocumentPosition.Preceding;\n      } else {\n        return DocumentPosition.Following;\n      }\n    };\n\n    XMLNode.prototype.isSameNode = function (other) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupPrefix = function (namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isDefaultNamespace = function (namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupNamespaceURI = function (prefix) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isEqualNode = function (node) {\n      var i, j, ref2;\n\n      if (node.nodeType !== this.nodeType) {\n        return false;\n      }\n\n      if (node.children.length !== this.children.length) {\n        return false;\n      }\n\n      for (i = j = 0, ref2 = this.children.length - 1; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j) {\n        if (!this.children[i].isEqualNode(node.children[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    XMLNode.prototype.getFeature = function (feature, version) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.setUserData = function (key, data, handler) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.getUserData = function (key) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.contains = function (other) {\n      if (!other) {\n        return false;\n      }\n\n      return other === this || this.isDescendant(other);\n    };\n\n    XMLNode.prototype.isDescendant = function (node) {\n      var child, isDescendantChild, j, len, ref2;\n      ref2 = this.children;\n\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n\n        if (node === child) {\n          return true;\n        }\n\n        isDescendantChild = child.isDescendant(node);\n\n        if (isDescendantChild) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    XMLNode.prototype.isAncestor = function (node) {\n      return node.isDescendant(this);\n    };\n\n    XMLNode.prototype.isPreceding = function (node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos < thisPos;\n      }\n    };\n\n    XMLNode.prototype.isFollowing = function (node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos > thisPos;\n      }\n    };\n\n    XMLNode.prototype.treePosition = function (node) {\n      var found, pos;\n      pos = 0;\n      found = false;\n      this.foreachTreeNode(this.document(), function (childNode) {\n        pos++;\n\n        if (!found && childNode === node) {\n          return found = true;\n        }\n      });\n\n      if (found) {\n        return pos;\n      } else {\n        return -1;\n      }\n    };\n\n    XMLNode.prototype.foreachTreeNode = function (node, func) {\n      var child, j, len, ref2, res;\n      node || (node = this.document());\n      ref2 = node.children;\n\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n\n        if (res = func(child)) {\n          return res;\n        } else {\n          res = this.foreachTreeNode(child, func);\n\n          if (res) {\n            return res;\n          }\n        }\n      }\n    };\n\n    return XMLNode;\n  }();\n}).call(this);","map":{"version":3,"sources":["C:/Users/balwi/Documents/Coding/react-sfmc-api-poc/node_modules/xmlbuilder/lib/XMLNode.js"],"names":["DocumentPosition","NodeType","XMLCData","XMLComment","XMLDeclaration","XMLDocType","XMLDummy","XMLElement","XMLNamedNodeMap","XMLNode","XMLNodeList","XMLProcessingInstruction","XMLRaw","XMLText","getValue","isEmpty","isFunction","isObject","ref1","hasProp","hasOwnProperty","require","module","exports","parent1","parent","options","stringify","value","children","baseURI","Object","defineProperty","prototype","get","name","type","childNodeList","nodes","length","i","indexOf","document","child","j","len","ref2","str","nodeType","Element","DocumentFragment","textContent","set","Error","debugInfo","setParent","results","push","element","attributes","text","childNode","item","k","key","lastChild","len1","ref3","val","Array","isArray","apply","call","ignoreDecorators","convertAttKey","attribute","substr","separateArrayItems","dummy","keepNullNodes","convertTextKey","convertCDataKey","cdata","convertCommentKey","comment","convertRawKey","raw","convertPIKey","instruction","node","insertBefore","newChild","refChild","removed","splice","isRoot","insertAfter","remove","concat","commentBefore","commentAfter","target","insTarget","insValue","instructionBefore","instructionAfter","declaration","version","encoding","standalone","doc","xmldec","unshift","Declaration","root","dtd","pubID","sysID","doctype","DocType","up","Document","rootObject","end","prev","next","importDocument","clonedRoot","clone","ele","nod","txt","dat","com","ins","dec","e","n","t","d","c","r","u","importXMLBuilder","replaceChild","oldChild","removeChild","appendChild","hasChildNodes","cloneNode","deep","normalize","isSupported","feature","hasAttributes","attribs","compareDocumentPosition","other","ref","res","Disconnected","ImplementationSpecific","Math","random","Preceding","Following","isAncestor","Contains","isDescendant","isPreceding","isSameNode","lookupPrefix","namespaceURI","isDefaultNamespace","lookupNamespaceURI","prefix","isEqualNode","getFeature","setUserData","data","handler","getUserData","contains","isDescendantChild","nodePos","thisPos","treePosition","isFollowing","found","pos","foreachTreeNode","func"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNamedNodeMap, XMLNode, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject, ref1,\n    hasProp = {}.hasOwnProperty;\n\n  ref1 = require('./Utility'), isObject = ref1.isObject, isFunction = ref1.isFunction, isEmpty = ref1.isEmpty, getValue = ref1.getValue;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  XMLDummy = null;\n\n  NodeType = null;\n\n  XMLNodeList = null;\n\n  XMLNamedNodeMap = null;\n\n  DocumentPosition = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent1) {\n      this.parent = parent1;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.value = null;\n      this.children = [];\n      this.baseURI = null;\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n        XMLDummy = require('./XMLDummy');\n        NodeType = require('./NodeType');\n        XMLNodeList = require('./XMLNodeList');\n        XMLNamedNodeMap = require('./XMLNamedNodeMap');\n        DocumentPosition = require('./DocumentPosition');\n      }\n    }\n\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\n      get: function() {\n        return this.value;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\n      get: function() {\n        if (!this.childNodeList || !this.childNodeList.nodes) {\n          this.childNodeList = new XMLNodeList(this.children);\n        }\n        return this.childNodeList;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\n      get: function() {\n        return this.children[0] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\n      get: function() {\n        return this.children[this.children.length - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i + 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\n      get: function() {\n        return this.document() || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\n      get: function() {\n        var child, j, len, ref2, str;\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\n          str = '';\n          ref2 = this.children;\n          for (j = 0, len = ref2.length; j < len; j++) {\n            child = ref2[j];\n            if (child.textContent) {\n              str += child.textContent;\n            }\n          }\n          return str;\n        } else {\n          return null;\n        }\n      },\n      set: function(value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLNode.prototype.setParent = function(parent) {\n      var child, j, len, ref2, results;\n      this.parent = parent;\n      if (parent) {\n        this.options = parent.options;\n        this.stringify = parent.stringify;\n      }\n      ref2 = this.children;\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        results.push(child.setParent(this));\n      }\n      return results;\n    };\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref2, ref3, val;\n      lastChild = null;\n      if (attributes === null && (text == null)) {\n        ref2 = [{}, null], attributes = ref2[0], text = ref2[1];\n      }\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref3 = [attributes, text], text = ref3[0], attributes = ref3[1];\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\n            lastChild = this.dummy();\n          } else if (isObject(val) && isEmpty(val)) {\n            lastChild = this.element(key);\n          } else if (!this.options.keepNullNodes && (val == null)) {\n            lastChild = this.dummy();\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\n              lastChild = this.element(val);\n            } else {\n              lastChild = this.element(key);\n              lastChild.element(val);\n            }\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else if (!this.options.keepNullNodes && text === null) {\n        lastChild = this.dummy();\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, newChild, refChild, removed;\n      if (name != null ? name.type : void 0) {\n        newChild = name;\n        refChild = attributes;\n        newChild.setParent(this);\n        if (refChild) {\n          i = children.indexOf(refChild);\n          removed = children.splice(i);\n          children.push(newChild);\n          Array.prototype.push.apply(children, removed);\n        } else {\n          children.push(newChild);\n        }\n        return newChild;\n      } else {\n        if (this.isRoot) {\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n        }\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        child = this.parent.element(name, attributes, text);\n        Array.prototype.push.apply(this.parent.children, removed);\n        return child;\n      }\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref2;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref2 = [])), ref2;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref2;\n      if (name != null) {\n        name = getValue(name);\n      }\n      attributes || (attributes = {});\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref2 = [attributes, text], text = ref2[0], attributes = ref2[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      if (isObject(value)) {\n        this.element(value);\n      }\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.dummy = function() {\n      var child;\n      child = new XMLDummy(this);\n      return child;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children.length === 0) {\n        doc.children.unshift(xmldec);\n      } else if (doc.children[0].type === NodeType.Declaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref2, ref3;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref2 = doc.children;\n      for (i = j = 0, len = ref2.length; j < len; i = ++j) {\n        child = ref2[i];\n        if (child.type === NodeType.DocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref3 = doc.children;\n      for (i = k = 0, len1 = ref3.length; k < len1; i = ++k) {\n        child = ref3[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node. \" + this.debugInfo());\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node. \" + this.debugInfo());\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.debugInfo = function(name) {\n      var ref2, ref3;\n      name = name || this.name;\n      if ((name == null) && !((ref2 = this.parent) != null ? ref2.name : void 0)) {\n        return \"\";\n      } else if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else if (!((ref3 = this.parent) != null ? ref3.name : void 0)) {\n        return \"node: <\" + name + \">\";\n      } else {\n        return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    XMLNode.prototype.replaceChild = function(newChild, oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.removeChild = function(oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.appendChild = function(newChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.hasChildNodes = function() {\n      return this.children.length !== 0;\n    };\n\n    XMLNode.prototype.cloneNode = function(deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.normalize = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isSupported = function(feature, version) {\n      return true;\n    };\n\n    XMLNode.prototype.hasAttributes = function() {\n      return this.attribs.length !== 0;\n    };\n\n    XMLNode.prototype.compareDocumentPosition = function(other) {\n      var ref, res;\n      ref = this;\n      if (ref === other) {\n        return 0;\n      } else if (this.document() !== other.document()) {\n        res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\n        if (Math.random() < 0.5) {\n          res |= DocumentPosition.Preceding;\n        } else {\n          res |= DocumentPosition.Following;\n        }\n        return res;\n      } else if (ref.isAncestor(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Preceding;\n      } else if (ref.isDescendant(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Following;\n      } else if (ref.isPreceding(other)) {\n        return DocumentPosition.Preceding;\n      } else {\n        return DocumentPosition.Following;\n      }\n    };\n\n    XMLNode.prototype.isSameNode = function(other) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupPrefix = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isDefaultNamespace = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupNamespaceURI = function(prefix) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isEqualNode = function(node) {\n      var i, j, ref2;\n      if (node.nodeType !== this.nodeType) {\n        return false;\n      }\n      if (node.children.length !== this.children.length) {\n        return false;\n      }\n      for (i = j = 0, ref2 = this.children.length - 1; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j) {\n        if (!this.children[i].isEqualNode(node.children[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    XMLNode.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.setUserData = function(key, data, handler) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.getUserData = function(key) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.contains = function(other) {\n      if (!other) {\n        return false;\n      }\n      return other === this || this.isDescendant(other);\n    };\n\n    XMLNode.prototype.isDescendant = function(node) {\n      var child, isDescendantChild, j, len, ref2;\n      ref2 = this.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (node === child) {\n          return true;\n        }\n        isDescendantChild = child.isDescendant(node);\n        if (isDescendantChild) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    XMLNode.prototype.isAncestor = function(node) {\n      return node.isDescendant(this);\n    };\n\n    XMLNode.prototype.isPreceding = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos < thisPos;\n      }\n    };\n\n    XMLNode.prototype.isFollowing = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos > thisPos;\n      }\n    };\n\n    XMLNode.prototype.treePosition = function(node) {\n      var found, pos;\n      pos = 0;\n      found = false;\n      this.foreachTreeNode(this.document(), function(childNode) {\n        pos++;\n        if (!found && childNode === node) {\n          return found = true;\n        }\n      });\n      if (found) {\n        return pos;\n      } else {\n        return -1;\n      }\n    };\n\n    XMLNode.prototype.foreachTreeNode = function(node, func) {\n      var child, j, len, ref2, res;\n      node || (node = this.document());\n      ref2 = node.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (res = func(child)) {\n          return res;\n        } else {\n          res = this.foreachTreeNode(child, func);\n          if (res) {\n            return res;\n          }\n        }\n      }\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}